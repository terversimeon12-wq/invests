<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Legit Hub - Secure Investment</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #0d1117;
            color: #e2e8f0;
        }
        .text-neon-green {
            color: #38a169;
        }
        .bg-neon-green {
            background-color: #38a169;
        }
        .btn-primary {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(56, 161, 105, 0.4);
        }
        .card {
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }
        .tab-btn.active {
            background-color: #38a169;
            color: #0d1117;
        }
    </style>
</head>
<body class="bg-gray-900 text-gray-200">

    <!-- Header -->
    <header class="bg-gray-900 shadow-xl fixed top-0 left-0 right-0 z-50">
        <nav class="container mx-auto px-6 py-4 flex items-center justify-between">
            <a href="#" class="flex items-center space-x-2">
                <span class="text-4xl font-extrabold text-neon-green">Legit Hub</span>
            </a>
            <div class="space-x-4">
                <a href="#properties" class="text-lg hover:text-neon-green transition-colors">Properties</a>
                <a href="#contact" class="text-lg hover:text-neon-green transition-colors">Contact</a>
                <a href="#" id="withdraw-btn" class="text-lg hover:text-neon-green transition-colors">Withdraw</a>
                <button id="profile-btn" class="bg-neon-green text-gray-900 font-bold py-2 px-6 rounded-full btn-primary">
                    Create Profile
                </button>
            </div>
        </nav>
    </header>

    <!-- Main Content Wrapper -->
    <div id="main-content">
        <main class="container mx-auto px-6 pt-24 pb-12">

            <!-- Hero Section -->
            <section class="text-center mb-24">
                <div class="relative w-full h-96 rounded-3xl overflow-hidden shadow-2xl mb-8">
                    <img src="https://placehold.co/1200x500/0d1117/38a169?text=Invest+in+your+future" onerror="this.onerror=null;this.src='https://placehold.co/1200x500/0d1117/38a169?text=Invest+with+Confidence';" alt="Modern investment graphics" class="w-full h-full object-cover">
                    <div class="absolute inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4">
                        <div class="p-8">
                            <h1 class="text-5xl md:text-7xl font-black text-white leading-tight mb-4 tracking-wider">
                                Invest Securely. Grow Your Wealth.
                            </h1>
                            <p class="text-lg md:text-xl text-gray-300 max-w-4xl mx-auto mb-8">
                                Join Legit Hub to access verified, high-yield investment opportunities. We provide the transparency and security you need to make smart financial decisions.
                            </p>
                            <a href="#investment-tiers" class="btn-primary inline-block bg-neon-green text-gray-900 font-bold py-4 px-12 rounded-full text-lg shadow-xl hover:bg-green-600">
                                Explore Investments
                            </a>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Investment Properties Section -->
            <section id="properties" class="py-16">
                <h2 class="text-5xl font-extrabold text-center mb-16 text-white tracking-wide">
                    Featured Properties
                </h2>
                <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-12">

                    <!-- Investment Card 1 -->
                    <div class="bg-gray-800 rounded-3xl overflow-hidden shadow-2xl card">
                        <img src="https://placehold.co/800x600/1a202c/e2e8f0?text=Luxury+Apartment+Complex" class="w-full h-56 object-cover" alt="Luxury apartment complex">
                        <div class="p-8">
                            <h3 class="text-3xl font-bold text-neon-green mb-2">Urban Vista Towers</h3>
                            <p class="text-gray-400 mb-4">Prime real estate in the heart of the city.</p>
                            <div class="flex justify-between items-center mb-4">
                                <span class="text-xl font-bold text-white">Yield: 12% p.a.</span>
                                <span class="text-lg text-gray-400">Min. ₦5,000</span>
                            </div>
                            <a href="#" class="block text-center bg-gray-700 text-white py-3 rounded-full hover:bg-gray-600 transition-colors">View Details</a>
                        </div>
                    </div>

                    <!-- Investment Card 2 -->
                    <div class="bg-gray-800 rounded-3xl overflow-hidden shadow-2xl card">
                        <img src="https://placehold.co/800x600/1a202c/e2e8f0?text=Renewable+Energy+Fund" class="w-full h-56 object-cover" alt="Renewable energy fund">
                        <div class="p-8">
                            <h3 class="text-3xl font-bold text-neon-green mb-2">Solar Farm Initiative</h3>
                            <p class="text-gray-400 mb-4">Invest in sustainable and profitable energy.</p>
                            <div class="flex justify-between items-center mb-4">
                                <span class="text-xl font-bold text-white">Yield: 9% p.a.</span>
                                <span class="text-lg text-gray-400">Min. ₦2,000</span>
                            </div>
                            <a href="#" class="block text-center bg-gray-700 text-white py-3 rounded-full hover:bg-gray-600 transition-colors">View Details</a>
                        </div>
                    </div>

                    <!-- Investment Card 3 -->
                    <div class="bg-gray-800 rounded-3xl overflow-hidden shadow-2xl card">
                        <img src="https://placehold.co/800x600/1a202c/e2e8f0?text=Tech+Startup+Portfolio" class="w-full h-56 object-cover" alt="Tech startup portfolio">
                        <div class="p-8">
                            <h3 class="text-3xl font-bold text-neon-green mb-2">Future Tech Ventures</h3>
                            <p class="text-gray-400 mb-4">Support innovative startups with high growth potential.</p>
                            <div class="flex justify-between items-center mb-4">
                                <span class="text-xl font-bold text-white">Yield: 15% p.a.</span>
                                <span class="text-lg text-gray-400">Min. ₦10,000</span>
                            </div>
                            <a href="#" class="block text-center bg-gray-700 text-white py-3 rounded-full hover:bg-gray-600 transition-colors">View Details</a>
                        </div>
                    </div>

                </div>

                <!-- New Investment Tiers Section -->
                <div id="investment-tiers" class="mt-20">
                    <h2 class="text-4xl font-extrabold text-center mb-4 text-white tracking-wide">
                        Investment Tiers
                    </h2>
                    <p class="text-center text-2xl font-extrabold text-red-400 mb-10">Cashout Timeframe: 7days</p>
                    <div class="grid md:grid-cols-1 lg:grid-cols-3 gap-8">
                        <!-- Tier 1 -->
                        <div class="bg-gray-800 rounded-3xl p-8 text-center shadow-2xl card">
                            <h3 class="text-3xl font-bold text-neon-green mb-2">Basic Tier</h3>
                            <p class="text-gray-400 mb-4">Invest and grow your wealth.</p>
                            <p class="text-4xl font-extrabold text-white mb-2">₦10,000</p>
                            <p class="text-lg text-gray-400">grows to</p>
                            <p class="text-4xl font-extrabold text-white mt-2">₦15,000</p>
                            <button class="invest-btn mt-4 w-full bg-neon-green text-gray-900 font-bold py-3 rounded-full hover:bg-green-600 transition-colors">
                                Invest Now
                            </button>
                        </div>
                        <!-- Tier 2 -->
                        <div class="bg-gray-800 rounded-3xl p-8 text-center shadow-2xl card">
                            <h3 class="text-3xl font-bold text-neon-green mb-2">Standard Tier</h3>
                            <p class="text-gray-400 mb-4">Accelerate your returns.</p>
                            <p class="text-4xl font-extrabold text-white mb-2">₦20,000</p>
                            <p class="text-lg text-gray-400">grows to</p>
                            <p class="text-4xl font-extrabold text-white mt-2">₦35,000</p>
                            <button class="invest-btn mt-4 w-full bg-neon-green text-gray-900 font-bold py-3 rounded-full hover:bg-green-600 transition-colors">
                                Invest Now
                            </button>
                        </div>
                        <!-- Tier 3 -->
                        <div class="bg-gray-800 rounded-3xl p-8 text-center shadow-2xl card">
                            <h3 class="text-3xl font-bold text-neon-green mb-2">Premium Tier</h3>
                            <p class="text-gray-400 mb-4">Maximize your investment potential.</p>
                            <p class="text-4xl font-extrabold text-white mb-2">₦50,000</p>
                            <p class="text-lg text-gray-400">grows to</p>
                            <p class="text-4xl font-extrabold text-white mt-2">₦75,000</p>
                            <button class="invest-btn mt-4 w-full bg-neon-green text-gray-900 font-bold py-3 rounded-full hover:bg-green-600 transition-colors">
                                Invest Now
                            </button>
                        </div>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <!-- Withdrawal Processing Page (Hidden by default) -->
    <div id="processing-page" class="hidden fixed inset-0 bg-gray-900 bg-opacity-95 items-center justify-center p-4 z-40">
        <div class="bg-gray-800 rounded-3xl p-8 text-center max-w-lg w-full shadow-2xl">
            <h2 class="text-5xl font-extrabold text-neon-green mb-4 animate-pulse">
                Withdrawal Processing
            </h2>
            <p class="text-lg md:text-xl text-gray-300 mb-8">
                Your withdrawal request has been submitted and is currently being processed. You will be notified once the funds are transferred.
            </p>
            <button id="go-home-btn" class="btn-primary inline-block bg-neon-green text-gray-900 font-bold py-3 px-8 rounded-full shadow-xl hover:bg-green-600">
                Back to Home
            </button>
        </div>
    </div>

    <!-- Profile Creation/Login Section (Hidden by default) -->
    <div id="profile-modal" class="fixed inset-0 bg-gray-900 bg-opacity-75 hidden items-center justify-center p-4 z-50">
        <div class="bg-gray-800 rounded-3xl p-8 max-w-lg w-full shadow-2xl relative">
            <!-- Tab Buttons -->
            <div class="flex justify-center space-x-4 mb-6">
                <button id="register-tab-btn" class="tab-btn px-6 py-2 rounded-full font-bold text-gray-400 hover:text-white transition-colors active">Register</button>
                <button id="login-tab-btn" class="tab-btn px-6 py-2 rounded-full font-bold text-gray-400 hover:text-white transition-colors">Log In</button>
            </div>
            
            <div id="register-container">
                <h3 class="text-3xl font-bold text-white text-center mb-6">Create Your Profile</h3>
                <form id="profile-form" class="space-y-4">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="surname" class="block text-gray-400 mb-2">Surname</label>
                            <input type="text" id="surname" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="Doe" required>
                        </div>
                        <div>
                            <label for="name" class="block text-gray-400 mb-2">Name</label>
                            <input type="text" id="name" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="John" required>
                        </div>
                    </div>
                    <div>
                        <label for="email" class="block text-gray-400 mb-2">Email Address</label>
                        <input type="email" id="email" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="johndoe@example.com" required>
                    </div>
                    <div>
                        <label for="password" class="block text-gray-400 mb-2">Create Password</label>
                        <input type="password" id="password" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" required>
                    </div>
                    <div>
                        <label for="confirm-password" class="block text-gray-400 mb-2">Confirm Password</label>
                        <input type="password" id="confirm-password" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" required>
                    </div>
                    <div>
                        <label for="dob" class="block text-gray-400 mb-2">Date of Birth</label>
                        <input type="date" id="dob" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" required>
                    </div>
                    <button type="submit" class="w-full btn-primary bg-neon-green text-gray-900 font-bold py-3 rounded-full hover:bg-green-600">
                        Register
                    </button>
                    <!-- Loading and Message Containers -->
                    <div id="loading-spinner" class="hidden flex justify-center items-center mt-4">
                        <svg class="animate-spin h-8 w-8 text-neon-green" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </div>
                    <div id="message-box" class="mt-4 text-center p-3 rounded-lg"></div>
                </form>
            </div>
            
            <div id="login-container" class="hidden">
                <h3 class="text-3xl font-bold text-white text-center mb-6">Log In to Your Profile</h3>
                <form id="login-form" class="space-y-4">
                    <div>
                        <label for="loginEmail" class="block text-gray-400 mb-2">Email/Username</label>
                        <input type="email" id="loginEmail" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="johndoe@example.com" required>
                    </div>
                    <div>
                        <label for="loginPassword" class="block text-gray-400 mb-2">Password</label>
                        <input type="password" id="loginPassword" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" required>
                    </div>
                    <button type="submit" class="w-full btn-primary bg-neon-green text-gray-900 font-bold py-3 rounded-full hover:bg-green-600">
                        Log In
                    </button>
                    <!-- Loading and Message Containers -->
                    <div id="login-loading-spinner" class="hidden flex justify-center items-center mt-4">
                        <svg class="animate-spin h-8 w-8 text-neon-green" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </div>
                    <div id="login-message-box" class="mt-4 text-center p-3 rounded-lg"></div>
                </form>
            </div>

            <button id="close-modal-btn" class="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
    </div>

    <!-- Withdraw Modal (Hidden by default) -->
    <div id="withdraw-modal" class="fixed inset-0 bg-gray-900 bg-opacity-75 hidden items-center justify-center p-4 z-50">
        <div class="bg-gray-800 rounded-3xl p-8 max-w-lg w-full shadow-2xl relative">
            <h3 class="text-3xl font-bold text-white text-center mb-6">Withdraw Funds</h3>
            <form id="withdraw-form" class="space-y-4">
                <div>
                    <label for="accountName" class="block text-gray-400 mb-2">Account Name</label>
                    <input type="text" id="accountName" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="John Doe" required>
                </div>
                <div>
                    <label for="accountNumber" class="block text-gray-400 mb-2">Account Number</label>
                    <input type="text" id="accountNumber" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="1234567890" required>
                </div>
                <div>
                    <label for="bankName" class="block text-gray-400 mb-2">Bank Name</label>
                    <input type="text" id="bankName" class="w-full p-3 rounded-lg bg-gray-700 border border-gray-600 focus:outline-none focus:ring-2 focus:ring-neon-green" placeholder="Example Bank" required>
                </div>
                <button type="submit" class="w-full btn-primary bg-neon-green text-gray-900 font-bold py-3 rounded-full hover:bg-green-600">
                    Request Withdrawal
                </button>
                <!-- Loading and Message Containers -->
                <div id="withdraw-loading-spinner" class="hidden flex justify-center items-center mt-4">
                    <svg class="animate-spin h-8 w-8 text-neon-green" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                </div>
                <div id="withdraw-message-box" class="mt-4 text-center p-3 rounded-lg"></div>
            </form>
            <button id="close-withdraw-modal-btn" class="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
    </div>

    <!-- Payment Modal (Hidden by default) -->
    <div id="payment-modal" class="fixed inset-0 bg-gray-900 bg-opacity-75 hidden items-center justify-center p-4 z-50">
        <div class="bg-gray-800 rounded-3xl p-8 max-w-sm w-full shadow-2xl relative">
            <h3 class="text-3xl font-bold text-white text-center mb-6">Payment Details</h3>
            <p class="text-center text-gray-400 mb-4">Please make your payment to the following account:</p>
            <div class="space-y-4">
                <div class="text-center p-4 bg-gray-700 rounded-lg">
                    <p class="text-lg font-bold text-neon-green">Bank Name:</p>
                    <p class="text-2xl font-extrabold text-white">Moniepoint</p>
                </div>
                <div class="text-center p-4 bg-gray-700 rounded-lg">
                    <p class="text-lg font-bold text-neon-green">Account Number:</p>
                    <p class="text-2xl font-extrabold text-white">8130517153</p>
                </div>
            </div>
            <button id="close-payment-modal-btn" class="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>
    </div>

    <!-- Footer -->
    <footer id="contact" class="bg-gray-900 text-gray-500 py-8">
        <div class="container mx-auto text-center px-6">
            <p>&copy; 2025 Legit Hub. All rights reserved.</p>
            <p class="mt-2">Contact us: <a href="mailto:legithub@gmail.org.ng" class="text-neon-green hover:underline">legithub@gmail.org.ng</a></p>
        </div>
    </footer>

    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, signInWithCustomToken, signInAnonymously, signInWithEmailAndPassword, createUserWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, collection, addDoc, setLogLevel } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        // Firebase configuration and initialization
        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
        const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};
        const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

        let db;
        let auth;
        let userId;

        // Function to initialize Firebase and authenticate
        async function initializeFirebase() {
            try {
                const app = initializeApp(firebaseConfig);
                db = getFirestore(app);
                auth = getAuth(app);
                setLogLevel('Debug');

                if (initialAuthToken) {
                    await signInWithCustomToken(auth, initialAuthToken);
                } else {
                    await signInAnonymously(auth);
                }
                userId = auth.currentUser.uid;
                console.log("Firebase initialized and authenticated.");
            } catch (error) {
                console.error("Firebase initialization failed: ", error);
            }
        }

        initializeFirebase();

        // DOM elements and event listeners
        const profileBtn = document.getElementById('profile-btn');
        const profileModal = document.getElementById('profile-modal');
        const closeModalBtn = document.getElementById('close-modal-btn');
        const profileForm = document.getElementById('profile-form');
        const loadingSpinner = document.getElementById('loading-spinner');
        const messageBox = document.getElementById('message-box');
        const investBtns = document.querySelectorAll('.invest-btn');
        const paymentModal = document.getElementById('payment-modal');
        const closePaymentModalBtn = document.getElementById('close-payment-modal-btn');
        const withdrawBtn = document.getElementById('withdraw-btn');
        const withdrawModal = document.getElementById('withdraw-modal');
        const closeWithdrawModalBtn = document.getElementById('close-withdraw-modal-btn');
        const withdrawForm = document.getElementById('withdraw-form');
        const withdrawLoadingSpinner = document.getElementById('withdraw-loading-spinner');
        const withdrawMessageBox = document.getElementById('withdraw-message-box');
        const mainContent = document.getElementById('main-content');
        const processingPage = document.getElementById('processing-page');
        const goHomeBtn = document.getElementById('go-home-btn');

        // New elements for login functionality
        const registerTabBtn = document.getElementById('register-tab-btn');
        const loginTabBtn = document.getElementById('login-tab-btn');
        const registerContainer = document.getElementById('register-container');
        const loginContainer = document.getElementById('login-container');
        const loginForm = document.getElementById('login-form');
        const loginLoadingSpinner = document.getElementById('login-loading-spinner');
        const loginMessageBox = document.getElementById('login-message-box');


        profileBtn.addEventListener('click', () => {
            profileModal.style.display = 'flex';
            showRegisterForm();
        });

        closeModalBtn.addEventListener('click', () => {
            profileModal.style.display = 'none';
        });

        profileModal.addEventListener('click', (event) => {
            if (event.target === profileModal) {
                profileModal.style.display = 'none';
            }
        });
        
        investBtns.forEach(button => {
            button.addEventListener('click', () => {
                paymentModal.style.display = 'flex';
            });
        });

        closePaymentModalBtn.addEventListener('click', () => {
            paymentModal.style.display = 'none';
        });
        
        paymentModal.addEventListener('click', (event) => {
            if (event.target === paymentModal) {
                paymentModal.style.display = 'none';
            }
        });

        withdrawBtn.addEventListener('click', () => {
            withdrawModal.style.display = 'flex';
        });

        closeWithdrawModalBtn.addEventListener('click', () => {
            withdrawModal.style.display = 'none';
        });

        withdrawModal.addEventListener('click', (event) => {
            if (event.target === withdrawModal) {
                withdrawModal.style.display = 'none';
            }
        });

        goHomeBtn.addEventListener('click', () => {
            processingPage.style.display = 'none';
            mainContent.style.display = 'block';
        });


        // Tab switching logic
        registerTabBtn.addEventListener('click', showRegisterForm);
        loginTabBtn.addEventListener('click', showLoginForm);

        function showRegisterForm() {
            registerContainer.classList.remove('hidden');
            loginContainer.classList.add('hidden');
            registerTabBtn.classList.add('active');
            loginTabBtn.classList.remove('active');
        }

        function showLoginForm() {
            loginContainer.classList.remove('hidden');
            registerContainer.classList.add('hidden');
            loginTabBtn.classList.add('active');
            registerTabBtn.classList.remove('active');
        }

        // Form submission handler for registration
        profileForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (!auth || !db) {
                console.error("Firebase is not initialized or user is not authenticated.");
                return;
            }

            loadingSpinner.style.display = 'flex';
            messageBox.textContent = '';
            messageBox.className = "mt-4 text-center p-3 rounded-lg";

            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirm-password').value;

            // Password validation
            if (password !== confirmPassword) {
                loadingSpinner.style.display = 'none';
                messageBox.textContent = 'Passwords do not match.';
                messageBox.classList.add('bg-red-800', 'text-red-300');
                return;
            }

            try {
                // Create user with email and password
                const userCredential = await createUserWithEmailAndPassword(auth, email, password);
                const uid = userCredential.user.uid;

                const formData = {
                    surname: document.getElementById('surname').value,
                    name: document.getElementById('name').value,
                    dob: document.getElementById('dob').value,
                    email: email,
                    timestamp: new Date()
                };

                const collectionPath = `artifacts/${appId}/users/${uid}/profiles`;
                await addDoc(collection(db, collectionPath), formData);
                
                loadingSpinner.style.display = 'none';
                messageBox.textContent = 'Profile created successfully! You are now logged in.';
                messageBox.classList.add('bg-green-800', 'text-green-300');
                profileForm.reset();
                setTimeout(() => {
                    profileModal.style.display = 'none';
                }, 1000);
            } catch (error) {
                console.error("Error creating user or adding document: ", error);
                loadingSpinner.style.display = 'none';
                
                let errorMessage = 'Failed to create profile. Please try again.';
                if (error.code === 'auth/email-already-in-use') {
                    errorMessage = 'This email is already registered. Please log in or use a different email.';
                } else if (error.code === 'auth/weak-password') {
                    errorMessage = 'The password is too weak. It must be at least 6 characters long.';
                }

                messageBox.textContent = errorMessage;
                messageBox.classList.add('bg-red-800', 'text-red-300');
            }
        });

        // Form submission handler for login
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (!auth) {
                console.error("Firebase auth is not initialized.");
                return;
            }

            loginLoadingSpinner.style.display = 'flex';
            loginMessageBox.textContent = '';
            loginMessageBox.className = "mt-4 text-center p-3 rounded-lg";

            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;

            try {
                const userCredential = await signInWithEmailAndPassword(auth, email, password);
                userId = userCredential.user.uid;
                
                loginLoadingSpinner.style.display = 'none';
                loginMessageBox.textContent = 'Login successful!';
                loginMessageBox.classList.add('bg-green-800', 'text-green-300');
                loginForm.reset();
                setTimeout(() => {
                    profileModal.style.display = 'none';
                }, 1000);
            } catch (error) {
                console.error("Login failed: ", error);
                loginLoadingSpinner.style.display = 'none';
                loginMessageBox.textContent = 'Login failed. Please check your credentials.';
                loginMessageBox.classList.add('bg-red-800', 'text-red-300');
            }
        });


        // Withdraw form submission handler
        withdrawForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            if (!db || !userId) {
                console.error("Firebase is not initialized or user is not authenticated.");
                return;
            }

            withdrawLoadingSpinner.style.display = 'flex';
            withdrawMessageBox.textContent = '';

            const withdrawalData = {
                accountName: document.getElementById('accountName').value,
                accountNumber: document.getElementById('accountNumber').value,
                bankName: document.getElementById('bankName').value,
                timestamp: new Date()
            };

            try {
                const collectionPath = `artifacts/${appId}/users/${userId}/withdrawals`;
                await addDoc(collection(db, collectionPath), withdrawalData);
                
                withdrawLoadingSpinner.style.display = 'none';
                withdrawModal.style.display = 'none';
                mainContent.style.display = 'none';
                processingPage.style.display = 'flex';
                withdrawForm.reset();
            } catch (error) {
                console.error("Error submitting withdrawal request: ", error);
                withdrawLoadingSpinner.style.display = 'none';
                withdrawMessageBox.textContent = 'Failed to submit withdrawal request. Please try again.';
                withdrawMessageBox.classList.add('bg-red-800', 'text-red-300');
            }
        });
    </script>

</body>
</html>